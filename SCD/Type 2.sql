---> Creating a stage table
CREATE OR REPLACE TABLE STAGING_PRODUCT(
PRODUCTID STRING,
PRODUCTNAME STRING,
PRODUCTCATEGORY STRING,
LASTUPDATED TIMESTAMP
);

---> To instert the value in staging Table
INSERT INTO STAGING_PRODUCT VALUES ('P001','LAPTOP','ELECTONICS', '2023-07-01 12:00:00');
INSERT INTO STAGING_PRODUCT VALUES ('P002','SMARTPHONE','ELECTONICS', '2023-07-01 12:00:00');
INSERT INTO STAGING_PRODUCT VALUES ('P003','TABLET','ELECTONICS', '2023-07-01 12:00:00');

SELECT * FROM STAGING_PRODUCT;


---> Creating dimension table
CREATE OR REPLACE TABLE DIM_PRODUCT(
SURROGATEKEY NUMBER AUTOINCREMENT,
PRODUCTID STRING,
PRODUCTNAME STRING,
PRODUCTCATEGORY STRING,
VALIDFROM TIMESTAMP,
VALIDTO TIMESTAMP,
ACTIVEFLAG BOOLEAN,
PRIMARY KEY (SURROGATEKEY)
);

INSERT INTO DIM_PRODUCT (PRODUCTID, PRODUCTNAME,PRODUCTCATEGORY, VALIDFROM, VALIDTO, ACTIVEFLAG) VALUES ('P001','LAPTOP','ELECTONICS', '2023-07-01 12:00:00','9999-12-31 23:59:59','TRUE'), ('P002','SMARTPHONE','ELECTONICS', '2023-07-01 12:00:00','9999-12-31 23:59:59','TRUE'),('P003','TABLET','ELECTONICS', '2023-07-01 12:00:00','9999-12-31 23:59:59','TRUE');

SELECT * FROM DIM_PRODUCT;

---> creating a stored procedure
CREATE OR REPLACE PROCEDURE UPDATE_DIM_PRODUCT()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
    -- Merge to update or deactivate existing records
    MERGE INTO DIM_PRODUCT AS TARGET
    USING STAGING_PRODUCT AS SOURCE
    ON TARGET.PRODUCTID = SOURCE.PRODUCTID AND TARGET.ACTIVEFLAG = TRUE
    WHEN MATCHED AND (
        TARGET.PRODUCTNAME <> SOURCE.PRODUCTNAME OR
        TARGET.PRODUCTCATEGORY <> SOURCE.PRODUCTCATEGORY
    )
    THEN
        UPDATE SET 
            TARGET.VALIDTO = SOURCE.LASTUPDATED,
            TARGET.ACTIVEFLAG = FALSE
    WHEN NOT MATCHED THEN
        INSERT (PRODUCTID, PRODUCTNAME, PRODUCTCATEGORY, VALIDFROM, VALIDTO, ACTIVEFLAG)
        VALUES (
            SOURCE.PRODUCTID,
            SOURCE.PRODUCTNAME,
            SOURCE.PRODUCTCATEGORY,
            SOURCE.LASTUPDATED,
            '9999-12-31 23:59:59',
            TRUE
        );

    -- Insert new versions of updated records
    INSERT INTO DIM_PRODUCT (PRODUCTID, PRODUCTNAME, PRODUCTCATEGORY, VALIDFROM, VALIDTO, ACTIVEFLAG)
    SELECT 
        SOURCE.PRODUCTID,
        SOURCE.PRODUCTNAME,
        SOURCE.PRODUCTCATEGORY,
        SOURCE.LASTUPDATED,
        '9999-12-31 23:59:59',
        TRUE
    FROM STAGING_PRODUCT AS SOURCE
    LEFT JOIN DIM_PRODUCT AS TARGET
        ON SOURCE.PRODUCTID = TARGET.PRODUCTID AND TARGET.ACTIVEFLAG = TRUE
    WHERE TARGET.SURROGATEKEY IS NULL OR (
        TARGET.PRODUCTNAME <> SOURCE.PRODUCTNAME OR 
        TARGET.PRODUCTCATEGORY <> SOURCE.PRODUCTCATEGORY
    );

    RETURN 'SCD TYPE 2 DIMENSION TABLE IS UPDATED';
END;
$$;


CALL UPDATE_DIM_PRODUCT();

SELECT * FROM STAGING_PRODUCT;
SELECT * FROM DIM_PRODUCT;

INSERT INTO STAGING_PRODUCT VALUES ('P004','GAMING LAPTOP','ELECTONICS', '2023-07-01 12:00:00');
INSERT INTO STAGING_PRODUCT VALUES ('P005','SMARTPHONE','ELECTONICS', '2023-07-01 12:00:00');
INSERT INTO STAGING_PRODUCT VALUES ('P006','EAR BUDS','ELECTONICS', '2023-07-01 12:00:00');

UPDATE STAGING_PRODUCT SET PRODUCTNAME = 'HEADPHONE' WHERE PRODUCTID='P006';


--- Conclusion:
-- (we can observe that after updating , it has both current and historical record) - (also, if we insert new data, ACTIVEFLAG becomes TRUE while updating the ACTIVEFLAG becomes FALSE)

