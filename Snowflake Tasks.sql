----------------------------------------------------------------------------------------------------------
CREATE DATABASE IF NOT EXISTS SNOWFLAKE_TASK;

USE DATABASE SNOWFLAKE_TASK;

CREATE SCHEMA TASK_SCHEMA;

USE SCHEMA TASK_SCHEMA;

--> Create a Table
CREATE TABLE Employee (
    EmpID INT NOT NULL,
    FirstName STRING,
    LastName STRING,
    StartDate DATE,
    ExitDate DATE,
    Title STRING,
    Supervisor STRING,
    ADEmail STRING,
    BusinessUnit STRING,
    EmployeeStatus STRING,
    EmployeeType STRING,
    PayZone STRING,
    EmployeeClassificationType STRING,
    TerminationType STRING,
    TerminationDescription STRING,
    DepartmentType STRING,
    Division STRING,
    DOB STRING,
    State STRING,
    JobFunctionDescription STRING,
    GenderCode CHAR(10),
    LocationCode STRING,
    RaceDesc STRING,
    MaritalDesc STRING,
    PerformanceScore STRING,
    CurrentEmployeeRating STRING,
    PRIMARY KEY (EmpID)
);


PUT file://C:\Users\Administrator\Downloads\employee_data.csv @~

LIST @~;

---> To insert the data from 'USER Stage' to 'TABLE'
COPY INTO SNOWFLAKE_TASK.TASK_SCHEMA.EMPLOYEE 
FROM @~
FILE_FORMAT = (TYPE = 'CSV', SKIP_HEADER = 1)
ON_ERROR = 'CONTINUE';

SELECT * FROM EMPLOYEE;


CREATE OR REPLACE TABLE EMP_SUMMARY(
BusinessUnit STRING,
AVG_RATING_PER_BU STRING
);


CREATE OR REPLACE TASK EMP_ANALYTICS_TASK
WAREHOUSE = COMPUTE_WH
SCHEDULE = 'USING CRON 1 * * * * UTC'
COMMENT = 'DAILY EVERY ONE MINUTE EMPLOYEE ANALYTICS WILL BEGIN'
AS
BEGIN 
CREATE OR REPLACE TABLE AVG_RATING_PER_BU_TABLE AS
SELECT BusinessUnit, AVG(CurrentEmployeeRating)OVER(PARTITION BY BusinessUnit) AS AVG_RATING_PER_BU FROM EMPLOYEE;
TRUNCATE TABLE EMP_SUMMARY;
INSERT INTO EMP_SUMMARY(BusinessUnit, AVG_RATING_PER_BU) SELECT BusinessUnit, AVG_RATING_PER_BU FROM AVG_RATING_PER_BU_TABLE;
END;

SHOW TASKS;

-- TASK IS SUSPENDED SO TO RESUME, RUN BELOW QUERY:
ALTER TASK EMP_ANALYTICS_TASK RESUME;

SELECT * FROM EMP_SUMMARY;

SELECT * FROM AVG_RATING_PER_BU_TABLE;

DROP TASK EMP_ANALYTICS_TASK;


-----------------------------------------------------------------------------------------------------------
---------------------------------SNOWFLAKE MANAGED COMPUTE------------------------------------------------

--SNOWFLAKE SERVERLLESS TASK

CREATE OR REPLACE TABLE EMP_INFO(
BusinessUnit STRING,
AVG_RATING_PER_BU STRING
);


CREATE TASK DB_LOAD_SERVERLESS
USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL'
SCHEDULE='USING CRON * * * * * UTC'
AS
INSERT INTO EMP_INFO(BusinessUnit, AVG_RATING_PER_BU) VALUES('EU EUROPE','5');

DROP TASK DB_LOAD_SERVERLESS;

SELECT * FROM EMP_INFO;
-------------------------------------------------------------------------------------------------------

--TASK HISTORY
SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY())
ORDER BY SCHEDULED_TIME;

--------------------------------------------------------------------------------------------------------
-------------------------------------TASK GRAPH-------------------------------------------------------

CREATE OR REPLACE TABLE BOOKS(
BOOK_ID INT AUTOINCREMENT PRIMARY KEY,
TITLE STRING,
AUTHOR STRING,
GENRE STRING,
PRICE NUMBER(10,2),
PUBLICATION_DATE DATE
);


CREATE OR REPLACE TABLE CUSTOMERS (
    CUSTOMER_ID INT AUTOINCREMENT PRIMARY KEY,
    FIRST_NAME STRING,
    LAST_NAME STRING,
    EMAIL STRING,
    PHONE STRING,
    ADDRESS STRING
);


CREATE OR REPLACE TABLE SALES (
    SALE_ID INT AUTOINCREMENT PRIMARY KEY,
    BOOK_ID INT,
    CUSTOMER_ID INT,
    SALE_DATE DATE,
    QUANTITY INT,
    TOTAL_PRICE NUMBER(10,2),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOKS(BOOK_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);


INSERT INTO BOOKS (TITLE, AUTHOR, GENRE, PRICE, PUBLICATION_DATE) VALUES
('The Great Gatsby', 'F. Scott', 'Fiction',10.99, '1925-04-10'),
('To kill a mockingbird', 'harper lee', 'fiction', 7.99, '1960-07-11'),
('1984','George Orwell', 'Dystopian', 8.99, '1949-06-08');


INSERT INTO CUSTOMERS (FIRST_NAME, LAST_NAME, EMAIL, PHONE, ADDRESS) VALUES 
('JOHN','DOE','JOHN.DOE@EXAMPLE.COM','123-456-7890','123 MAIN ST'),
('JANE', 'SMITH', 'JANE.SMITH@EXAMPLE.COM', '098-765-4321','456 ELM ST');

INSERT INTO SALES (BOOK_ID, CUSTOMER_ID, SALE_DATE, QUANTITY, TOTAL_PRICE) VALUES
(1, 2, '2024-06-01',1,10.99),
(2, 1, '2024-06-05',2,15.98),
(3, 2, '2024-06-10',1,8.99);


SELECT * FROM CUSTOMERS;



SELECT SALE_DATE, SUM(QUANTITY) AS TOTAL_BOOK_SOLD, SUM(TOTAL_PRICE) AS TOTAL_SALES_AMOUNT FROM SALES GROUP BY SALE_DATE;

ALTER TABLE BOOKS ADD COLUMN STOCK_QUANTITY INT DEFAULT 100;


CREATE OR REPLACE TASK AGGREGATE_DAILY_SALES
WAREHOUSE= COMPUTE_WH
SCHEDULE = 'USING CRON 2 * * * * UTC'
AS
CREATE OR REPLACE TABLE DAILY_SALES AS
SELECT SALE_DATE,SUM(QUANTITY) AS TOT_BOOKS_SOLD, SUM(TOTAL_PRICE) AS TOTAL_SALES_AMOUNT FROM SALES GROUP BY SALE_DATE;


SHOW TASKS;

select * from books;
